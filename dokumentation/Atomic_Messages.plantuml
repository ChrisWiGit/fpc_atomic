''Eval Image with http://plantuml.sourceforge.net/
''---------- Atomic_Messages.png ---------- 
@startuml

title Atomic messages

legend top right
|<#00AA00>    | Client Sreens|
|<#0055AA>    | Client States|
|<#FFAAAA>    | Server States|
end legend

participant Client_1
participant Server
participant Client_n

rnote over Client_1 #0055AA
  gs_MainMenu
end rnote

rnote over Client_1 #00AA00
  sMainScreen
end rnote

rnote over Client_1 
  Player host a game
end rnote

Client_1 -> Server : Start

rnote over Server
  Start UDP Listening
end rnote

rnote over Server
  Start TCP Listening
end rnote

rnote over Server #FFAAAA
  gsWaitForPlayersToConnect
end rnote

rnote over Client_1
  Player want to join
end rnote

rnote over Client_1 #00AA00
  sJoinNetwork
end rnote

rnote over Client_1
  Start UDP Broadcast
end rnote
Client_1->Server: UDP: Broadcast

Server->Client_1:UDP: Serverinfo, Portinfo

rnote over Client_1
  Stop UDP Broadcast
end rnote

Client_1->Server : Connect via TCP
Client_1->Server : miRequestLogin

rnote over Server
  Check version
  Check gamestate
  Check playername
  Check playercount
end rnote

== Reject ==
Server->Client_1 : miRequestLoginResult
rnote over Client_1
  Show error message
  Disconnect from server
end rnote
rnote over Client_1 #00AA00
  sMainScreen
end rnote

== Accept ==
Server->Client_1 : miRequestLoginResult

group broadcast 
  Server->Client_1 : miRefreshPlayerStats
end

rnote over Server
  Check available fields
end rnote
Server->Client_1 : miAvailableFieldList
rnote over Client_1
  Update available fields
end rnote

Client_1->Server : miUpdateSettings
note left
  as result of
  miRequestLoginResult
end note

rnote over Server
  Load Settings
end rnote

group Add further clients
  rnote over Client_n #00AA00
    sMainScreen
  end rnote
  rnote over Client_n
    Player want to join
  end rnote

  rnote over Client_n #00AA00
    sJoinNetwork
  end rnote

  rnote over Client_n
    Start UDP Broadcast
  end rnote
  Client_n->Server: UDP: Broadcast
  Server->Client_n:UDP: Serverinfo, Portinfo

  rnote over Client_n
    Stop UDP Broadcast
  end rnote

  Client_n->Server : Connect via TCP
  Client_n->Server : miRequestLogin
  rnote over Server
    Check version
    Check gamestate
    Check playername
    Check playercount
  end rnote
  Server->Client_n : miRequestLoginResult
  group broadcast 
    Server->Client_1 : miRefreshPlayerStats
    Server->Client_n : miRefreshPlayerStats
  end
  rnote over Server
    Check available fields
  end rnote

  Server->Client_1 : miAvailableFieldList
  note left
    Only Client_1
    needs correct
    field list
  end note

  rnote over Client_1
    Update available fields
  end rnote
end
'' Take some time 
...
Client_1->Server : miSwitchToPlayerSetup
rnote over Server
  Stop UDP Listening
end rnote

group broadcast 
  Server->Client_n : miUpdateSettings
end
rnote over Server #FFAAAA
  gsPlayerSetup
end rnote

group broadcast 
  Server->Client_1: miSwitchToPlayerSetup
  Server->Client_n: miSwitchToPlayerSetup
end

rnote over Client_1 #00AA00
  sPlayerSetup
end rnote

rnote over Client_n #00AA00
  sPlayerSetup
end rnote

group Every player sets his settings
  Client_1->Server: miChangePlayerKey
  group broadcast 
    Server->Client_1 : miRefreshPlayerStats
    Server->Client_n : miRefreshPlayerStats
  end
  Client_n->Server: miChangePlayerKey
  group broadcast 
    Server->Client_1 : miRefreshPlayerStats
    Server->Client_n : miRefreshPlayerStats
  end
end
'' Take some time 
...
rnote over Client_1
  Player want to edit field settings
end rnote

Client_1->Server: miUpdateFieldSetup
group broadcast 
  Server->Client_n : miUpdateFieldSetup
end

Client_1->Server: miSwitchToFieldSetup
rnote over Server
  Check double player 
  Check player count
end rnote

== Reject ==
Server->Client_1: miSplashHint
rnote over Client_1
  Show error message
end rnote

== Accept ==
rnote over Server #FFAAAA
  gsfieldSetup
end rnote
group broadcast 
  Server->Client_1 : miSwitchToFieldSetup
  Server->Client_n : miSwitchToFieldSetup
end

rnote over Client_1 #00AA00
  sEditFieldSetup
end rnote
rnote over Client_n #00AA00
  sEditFieldSetup
end rnote

group Client_1 sets the field properties
  Client_1->Server: miUpdateFieldSetup
  group broadcast 
    Server->Client_n : miUpdateFieldSetup
  end
end

'' Take some time 
...

rnote over Client_1 
  Player want to start the game
end rnote
Client_1->Server: miStartGame
rnote over Server #FFAAAA
  gsPlaying
end rnote
rnote over Server
  Init field data
end rnote

group broadcast 
  Server->Client_1 : miStartGame
  Server->Client_n : miStartGame
end
rnote over Client_1 #0055AA
  gs_Gaming
end rnote
rnote over Client_n #0055AA
  gs_Gaming
end rnote

group active round
  group each 10ms
    rnote over Server
    CreateNewFrame
    end rnote
  end

  group broadcast each 40ms
    rnote over Server
    UpdateAllClients
    end rnote
    Server->Client_1 : miUpdateGameData
    Server->Client_n : miUpdateGameData
  end

  group On user input
    Client_1->Server : miClientKeyEvent
    Client_n->Server : miClientKeyEvent
  end
end

== Draw game ==
rnote over Server #FFAAAA
  gsShowHighscore
end rnote
group broadcast 
  Server->Client_1 : miDrawGame
  Server->Client_n : miDrawGame
end

rnote over Client_1 #0055AA
  gs_MainMenu
end rnote
rnote over Client_1 #00AA00
  sDrawGame
end rnote
rnote over Client_n #0055AA
  gs_MainMenu
end rnote
rnote over Client_n #00AA00
  sDrawGame
end rnote
Client_1->Server : miStartGame

== a Winners game ==
rnote over Server #FFAAAA
  gsShowHighscore
end rnote

rnote over Server 
  calc winner and scores
end rnote

group broadcast 
  Server->Client_1 : miUpdateGameData
  Server->Client_n : miUpdateGameData
end

group broadcast 
  Server->Client_1 : miShowMatchStatistik
  Server->Client_n : miShowMatchStatistik
end
rnote over Client_1 #0055AA
  gs_MainMenu
end rnote

rnote over Client_1 #00AA00
  sMatchStatistik
end rnote
rnote over Client_n #0055AA
  gs_MainMenu
end rnote
rnote over Client_n #00AA00
  sMatchStatistik
end rnote
Client_1->Server : miStartGame

== Match not Finished yet ==
rnote over Server 
  normal round start see above
end rnote

== Match Finished ==
rnote over Server #FFAAAA
  gsShowVictory
end rnote
group broadcast 
  Server->Client_1 : miShowVictory
  Server->Client_n : miShowVictory
end

rnote over Client_1 #0055AA
  gs_MainMenu
end rnote
rnote over Client_1 #00AA00
  sVictory
end rnote
rnote over Client_n #0055AA
  gs_MainMenu
end rnote
rnote over Client_n #00AA00
  sVictory
end rnote

rnote over Server
  kick everyone
end rnote
Server->Client_1 : miCommandoBackToMainMenu
Server->Client_n : miCommandoBackToMainMenu

Client_1->Server: Disconnect
Client_n->Server: Disconnect

rnote over Server
  Start UDP Listening
end rnote

rnote over Server
  Start TCP Listening
end rnote

rnote over Server #FFAAAA
  gsWaitForPlayersToConnect
end rnote

note over Server 
  if timeout <> 0 then
  server will close after 3s
end note

rnote over Client_1
  press return
end rnote
rnote over Client_1 #00AA00
  sMainScreen
end rnote
rnote over Client_n
  press return
end rnote
rnote over Client_n #00AA00
  sMainScreen
end rnote

@enduml
